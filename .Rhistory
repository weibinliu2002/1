runApp('黄帅涛3.8/毕设3.5')
runApp('黄帅涛3.8/毕设3.5')
runApp('黄帅涛3.8/毕设3.5')
shiny::runApp('毕设3.5')
runApp('毕设3.5')
runApp('毕设3.5')
runApp('毕设3.5')
runApp('毕设3.5')
runApp('毕设3.5')
runApp('毕设3.5')
runApp('毕设3.5')
runApp('毕设3.5')
shiny::runApp('黄帅涛3.8/3.8')
runApp('毕设3.5')
runApp('毕设3.5')
runApp('3.9')
runApp('3.9')
runApp('3.9')
runApp('3.9')
runApp('3.9')
runApp('3.9')
shiny::runApp('3.9')
install.packages("shinyjs")
runApp('3.9')
runApp('3.9')
runApp('3.9')
runApp('3.9')
install.packages("colourpicker")
install.packages("colourpicker")
shiny::runApp('3.9')
shiny::runApp('黄帅涛3.8/3.8')
runApp('李思琪/bishe.R')
runApp('shinylollipop')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
shiny::runApp('shinylollipop')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
install.packages("ggpp")
install.packages("ggpp")
install.packages("ggpp")
install.packages("ggpp")
shiny::runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
?reactive()
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
library(showtext)
install.packages("showtext")
library(showtext)
runApp('黄帅涛3.8/3.8')
checkboxInput("biankuang", "边框", TRUE),
library(installr)
updateR()
library(showtext)
shiny::runApp('黄帅涛3.8/3.8')
runApp('黄帅涛3.8/3.8')
windowsFonts()
font_families() ### 查看当前字体
runApp('黄帅涛3.8/3.8')
font_families() ### 查看当前字体
windowsFonts()
runApp('黄帅涛3.8/3.8')
shiny::runApp('毕设3.15')
shiny::runApp('黄帅涛3.15')
shiny::runApp('黄帅涛3.15')
runApp('李思琪/bishe.R')
runApp('黄帅涛3.15')
runApp('黄帅涛3.15')
runApp('李思琪/bishe.R')
runApp('黄帅涛3.15')
runApp('黄帅涛3.15')
runApp('黄帅涛3.15')
runApp('李思琪/bishe.R')
runApp('shinylollipop')
runApp('黄帅涛3.15')
shiny::runApp('黄帅涛3.15')
runApp('黄帅涛3.15')
runApp('黄帅涛3.15')
shiny::runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('黄帅涛3.15')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.166')
runApp('4.166')
shiny::runApp('4.16')
runApp('001')
runApp('4.16')
shiny::runApp('C:/Users/86188/Downloads/histograms-master/histograms-master')
runApp('4.16')
runApp('C:/Users/86188/Downloads/histograms-master/histograms-master')
runApp('C:/Users/86188/Downloads/histograms-master/histograms-master')
font <- font_files()
font
table(font)
table(font$family)
table(font$face)
font <-
font_files() %>% select('file', 'family', 'face') %>% filter(face == 'Bold' |
face == 'Bold Italic' |
face == 'Italic' |
face == 'Regular')  %>% unique()
font
runApp('C:/Users/86188/Downloads/histograms-master/histograms-master')
runApp('4.16')
runApp('4.16')
runApp('C:/Users/86188/Downloads/histograms-master/histograms-master')
runApp('4.16')
runApp('4.16')
shiny::runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('C:/Users/86188/Downloads/histograms-master/histograms-master')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
View(a)
View(df)
runApp('4.16')
View(a)
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
shiny::runApp('4.16')
runApp('4.16')
shiny::runApp('4.16')
runApp('4.16')
library(gghalves)
library(aplot)
df <- read.table(file="~/毕设3.4/data.txt",sep="\t",header=T,check.names=FALSE)
###绘图
#散点图
p1 <- ggplot(df,aes(x,y,fill=group))+
geom_point(shape=21,size=3,alpha=0.3,color="black",stroke = 0.1)+
geom_smooth(method = "glm",aes(color=group), se=T,
formula = y ~ x,
linetype=1,alpha=0.5,size=1)+#线粗细
stat_cor(color="red",method = "pearson",label.x = 0.2, label.y = 7.5,size=4)+#R方程
stat_poly_eq(formula = y ~ x,
aes(color=group,label = paste(after_stat(eq.label),
sep = "~~~")), parse = TRUE) +
scale_fill_manual(values = "yellow")+
scale_color_manual(values = "red")+
theme_bw()+
theme(panel.grid=element_blank(),
axis.text.x = element_text(color='black',size=10,),
axis.text.y = element_text(color='black',size=10),
axis.line = element_line(color = "black"),
axis.title.x = element_text(color='black',size=10,angle=0,family="Arial"),
axis.title.y = element_text(color='black',size=10,angle=90),
legend.position = "none",
panel.border = element_rect(color = "bl", size = 0),
plot.background = element_rect(color = NA, size = 0))
labs(x="The title of x",y="The title of y")
p1
###添加边际组合图形——散点+箱线图+半小提琴
# 右边边际图
p2 <- ggplot(df,aes(1,y))+
geom_half_violin(fill="#00d1b2",position = position_nudge(x=0.26),side = "r",width=0.5,color=NA)+#点的分布
geom_boxplot(fill="#ff4c4c",width=0.1,size=1.2,color ="black",position = position_nudge(x=0.2))+#横线
geom_jitter(fill="#0099e5",shape=21,size=1,width=0.12,alpha=0.5,color="black",stroke = 0.1)+#点颜色
theme_void()+
theme(legend.position = "none")
p2
library(ggplot2)
library(ggpmisc)
library(ggpubr)
library(gghalves)
library(aplot)
df <- read.table(file="~/毕设3.4/data.txt",sep="\t",header=T,check.names=FALSE)
#自定义颜色
###绘图
#散点图
p1 <- ggplot(df,aes(x,y,fill=group))+
geom_point(shape=21,size=3,alpha=0.3,color="black",stroke = 0.1)+
geom_smooth(method = "glm",aes(color=group), se=T,
formula = y ~ x,
linetype=1,alpha=0.5,size=1)+#线粗细
stat_cor(color="red",method = "pearson",label.x = 0.2, label.y = 7.5,size=4)+#R方程
stat_poly_eq(formula = y ~ x,
aes(color=group,label = paste(after_stat(eq.label),
sep = "~~~")), parse = TRUE) +
scale_fill_manual(values = "yellow")+
scale_color_manual(values = "red")+
theme_bw()+
theme(panel.grid=element_blank(),
axis.text.x = element_text(color='black',size=10,),
axis.text.y = element_text(color='black',size=10),
axis.line = element_line(color = "black"),
axis.title.x = element_text(color='black',size=10,angle=0,family="Arial"),
axis.title.y = element_text(color='black',size=10,angle=90),
legend.position = "none",
panel.border = element_rect(color = "bl", size = 0),
plot.background = element_rect(color = NA, size = 0))
labs(x="The title of x",y="The title of y")
p1
labs(x="The title of x",y="The title of y")
p1
###添加边际组合图形——散点+箱线图+半小提琴
# 右边边际图
p2 <- ggplot(df,aes(1,y))+
geom_half_violin(fill="#00d1b2",position = position_nudge(x=0.26),side = "r",width=0.5,color=NA)+#点的分布
geom_boxplot(fill="#ff4c4c",width=0.1,size=1.2,color ="black",position = position_nudge(x=0.2))+#横线
geom_jitter(fill="#0099e5",shape=21,size=1,width=0.12,alpha=0.5,color="black",stroke = 0.1)+#点颜色
theme_void()+
theme(legend.position = "none")
p2
library(ggplot2)
library(ggpmisc)
library(ggpubr)
library(gghalves)
library(aplot)
df <- read.table(file="~/毕设3.4/data.txt",sep="\t",header=T,check.names=FALSE)
#自定义颜色
###绘图
#散点图
p1 <- ggplot(df,aes(x,y,fill=group))+
geom_point(shape=21,size=3,alpha=0.3,color="black",stroke = 0.1)+
geom_smooth(method = "glm",aes(color=group), se=T,
formula = y ~ x,
linetype=1,alpha=0.5,size=1)+#线粗细
stat_cor(color="red",method = "pearson",label.x = 0.2, label.y = 7.5,size=4)+#R方程
stat_poly_eq(formula = y ~ x,
aes(color=group,label = paste(after_stat(eq.label),
sep = "~~~")), parse = TRUE) +
scale_fill_manual(values = "yellow")+
scale_color_manual(values = "red")+
theme_bw()+
theme(panel.grid=element_blank(),
axis.text.x = element_text(color='black',size=10,),
axis.text.y = element_text(color='black',size=10),
axis.line = element_line(color = "black"),
axis.title.x = element_text(color='black',size=10,angle=0,family="Arial"),
axis.title.y = element_text(color='black',size=10,angle=90),
legend.position = "none",
panel.border = element_rect(color = "bl", size = 0),
plot.background = element_rect(color = NA, size = 0))
labs(x="The title of x",y="The title of y")
p1
library(ggplot2)
library(ggpmisc)
library(ggpubr)
library(gghalves)
library(aplot)
df <- read.table(file="~/毕设3.3/data.txt",sep="\t",header=T,check.names=FALSE)
#自定义颜色
###绘图
#散点图
p1 <- ggplot(df,aes(x,y,fill=group))+
geom_point(shape=21,size=3,alpha=0.3,color="black",stroke = 0.1)+
geom_smooth(method = "glm",aes(color=group), se=T,
formula = y ~ x,
linetype=1,alpha=0.5,size=1)+#线粗细
stat_cor(color="red",method = "pearson",label.x = 0.2, label.y = 7.5,size=4)+#R方程
stat_poly_eq(formula = y ~ x,
aes(color=group,label = paste(after_stat(eq.label),
sep = "~~~")), parse = TRUE) +
scale_fill_manual(values = "yellow")+
scale_color_manual(values = "red")+
theme_bw()+
theme(panel.grid=element_blank(),
axis.text.x = element_text(color='black',size=10,),
axis.text.y = element_text(color='black',size=10),
axis.line = element_line(color = "black"),
axis.title.x = element_text(color='black',size=10,angle=0,family="Arial"),
axis.title.y = element_text(color='black',size=10,angle=90),
legend.position = "none",
panel.border = element_rect(color = "bl", size = 0),
plot.background = element_rect(color = NA, size = 0))
labs(x="The title of x",y="The title of y")
p1
library(ggplot2)
library(ggpmisc)
library(ggpubr)
library(gghalves)
library(aplot)
df <- read.table(file="~/毕设3.3/data.txt",sep="\t",header=T,check.names=FALSE)
#自定义颜色
###绘图
#散点图
p1 <- ggplot(df,aes(x,y,fill=group))+
geom_point(shape=21,size=3,alpha=0.3,color="black",stroke = 0.1)+
geom_smooth(method = "glm",aes(color=group), se=T,
formula = y ~ x,
linetype=1,alpha=0.5,size=1)+#线粗细
stat_cor(color="red",method = "pearson",label.x = 0.2, label.y = 7.5,size=4)+#R方程
stat_poly_eq(formula = y ~ x,
aes(color=group,label = paste(after_stat(eq.label),
sep = "~~~")), parse = TRUE) +
scale_fill_manual(values = "yellow")+
scale_color_manual(values = "red")+
theme_bw()+
theme(panel.grid=element_blank(),
axis.text.x = element_text(color='black',size=10,),
axis.text.y = element_text(color='black',size=10),
axis.line = element_line(color = "black"),
axis.title.x = element_text(color='black',size=10,angle=0,family="Arial"),
axis.title.y = element_text(color='black',size=10,angle=90),
legend.position = "none",
panel.border = element_rect(color = "bl", size = 0),
plot.background = element_rect(color = NA, size = 0))
labs(x="The title of x",y="The title of y")
p1
library(ggplot2)
library(ggpmisc)
library(ggpubr)
library(gghalves)
library(aplot)
df <- read.table(file="~/毕设3.3/data.txt",sep="\t",header=T,check.names=FALSE)
#自定义颜色
###绘图
#散点图
p1 <- ggplot(df,aes(x,y,fill=group))+
geom_point(shape=21,size=3,alpha=0.3,color="black",stroke = 0.1)+
geom_smooth(method = "glm",aes(color=group), se=T,
formula = y ~ x,
linetype=1,alpha=0.5,size=1)+#线粗细
stat_cor(color="red",method = "pearson",label.x = 0.2, label.y = 7.5,size=4)+#R方程
stat_poly_eq(formula = y ~ x,
aes(color=group,label = paste(after_stat(eq.label),
sep = "~~~")), parse = TRUE) +
scale_fill_manual(values = "yellow")+
scale_color_manual(values = "red")+
theme_bw()+
theme(panel.grid=element_blank(),
axis.text.x = element_text(color='black',size=10,),
axis.text.y = element_text(color='black',size=10),
axis.line = element_line(color = "black"),
axis.title.x = element_text(color='black',size=10,angle=0,family="Arial"),
axis.title.y = element_text(color='black',size=10,angle=90),
legend.position = "none",
panel.border = element_rect(color = "bl", size = 0),
plot.background = element_rect(color = NA, size = 0))
labs(x="The title of x",y="The title of y")
p1
library(ggplot2)
library(ggpmisc)
library(ggpubr)
library(gghalves)
library(aplot)
df <- read.table(file="~/毕设3.3/data.txt",sep="\t",header=T,check.names=FALSE)
#自定义颜色
###绘图
#散点图
p1 <- ggplot(df,aes(x,y,fill=group))+
geom_point(shape=21,size=3,alpha=0.3,color="black",stroke = 0.1)+
geom_smooth(method = "glm",aes(color=group), se=T,
formula = y ~ x,
linetype=1,alpha=0.5,size=1)+#线粗细
stat_cor(color="red",method = "pearson",label.x = 0.2, label.y = 7.5,size=4)+#R方程
stat_poly_eq(formula = y ~ x,
aes(color=group,label = paste(after_stat(eq.label),
sep = "~~~")), parse = TRUE) +
scale_fill_manual(values = "yellow")+
scale_color_manual(values = "red")+
theme_bw()+
theme(panel.grid=element_blank(),
axis.text.x = element_text(color='black',size=10,),
axis.text.y = element_text(color='black',size=10),
axis.line = element_line(color = "black"),
axis.title.x = element_text(color='black',size=10,angle=0,family="Arial"),
axis.title.y = element_text(color='black',size=10,angle=90),
legend.position = "none",
panel.border = element_rect(color = "bl", size = 0),
plot.background = element_rect(color = NA, size = 0))
labs(x="The title of x",y="The title of y")
p1
runApp('4.16')
p_value <- cor.test(df$x, df$y)$p.value
p1 <- ggplot(df, aes(x, y, fill = group)) +
geom_point(shape = as.numeric(input$sss5), size = input$sss4, alpha = input$sss3, color = input$c2, stroke = input$x) +
geom_smooth(method = "lm", aes(color = group), se = T, formula = y ~ x, linetype = 1, alpha = 0.5) +
geom_text(aes(x = min(df$x), y = max(df$y), label = paste("R =", round(correlation, 2), ", p =", round(p_value, 4))),
color = col, size = 4, hjust = 0, vjust = 1) + # 添加 Pearson 相关系数和 p 值
stat_poly_eq(formula = y ~ x, aes(color = group, label = paste(after_stat(eq.label), sep = "~~~")), parse = TRUE) +
scale_fill_manual(values = input$color2) +
scale_color_manual(values = col) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text(color = 'black', size = input$ss1, angle = input$sss1),
axis.text.y = element_text(color = 'black', size = input$ss2, angle = input$sss2),
axis.title.x = element_text(color = 'black', size = input$ss3, family = input$ss5),
axis.title.y = element_text(color = 'black', size = input$ss4, family = input$ss6),
legend.position = "none") +
eval(parse(text = n1)) +
labs(x = input$text1, y = input$text2) +
scale_x_continuous(limits = c(min(df$x), max(df$x))) +
scale_y_continuous(limits = c(min(df$y), max(df$y)))
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
shiny::runApp('4.16')
shiny::runApp('4.16')
runApp('李思琪/bishe.R')
runApp('雨声')
runApp('4.16')
runApp('shinylollipop')
runApp('雨声')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
# 1.散点图配合拟合曲线和边际分布图
>
# 2.图片下载
>在完成图形参数修改之后，可以将图形下载到本地，本应用程序提供了两种下载文件的格式，分别是pdf和svg文件格式，用户可根据点击"Download PDF File"和"Download SVG File"进而来依据喜好和需求选择下载。
runApp('4.16')
runApp('雨声')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
shiny::runApp('4.16')
runApp('4.16')
runApp('4.16')
散点图配合拟合曲线和边际分布图
runApp('4.16')
shiny::runApp('4.16')
runApp('zhy/w.R')
install.packages("beeswarm")
runApp('zhy/w.R')
runApp('zhy/w.R')
runApp('zhy/w.R')
runApp('4.16')
runApp('4.16')
runApp('zhy/w.R')
runApp('4.16')
runApp('zhy/w.R')
runApp('zhy/w.R')
runApp('zhy/w.R')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
shiny::runApp('4.16')
shiny::runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('C:/Users/86188/Downloads/li(1)/li/lisiqi.R')
library(shiny); runApp('C:/Users/86188/Downloads/li(1)/li/lisiqi.R')
runApp('C:/Users/86188/Downloads/li(1)/li/lisiqi.R')
runApp('C:/Users/86188/Downloads/li(1)/li/lisiqi.R')
runApp('C:/Users/86188/Downloads/li(1)/li/lisiqi.R')
shiny::runApp('4.16')
runApp('4.16')
runApp('4.16')
shiny::runApp('4.16')
runApp('4.16')
runApp('4.16')
shiny::runApp('4.16')
shiny::runApp('4.16')
runApp('4.16')
runApp('4.16')
shiny::runApp('4.16')
shiny::runApp('4.16')
# 1.二维散点图结合箱图和密度脊线图
>
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
runApp('4.16')
shiny::runApp('4.16')
